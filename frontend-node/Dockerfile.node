# --- Stage 1: Builder ---
FROM node:16 AS builder

WORKDIR /app

# Copy dependency files first to leverage caching
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production

# Copy the rest of the application code
COPY . .

# --- Stage 2: Runtime ---
FROM node:18-alpine

WORKDIR /app

# Install runtime dependencies (if needed for health checks or monitoring)
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy built app and dependencies from builder
COPY --from=builder /app .

# Set environment variables (can be overridden at runtime)
ENV NODE_ENV=production
ENV PORT=3000

# Serve static assets (if applicable)
# COPY --from=builder /app/public /app/public

# Expose the app port
EXPOSE 3000

# Optional: Add a basic health check (Docker-compatible)
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD curl --fail http://localhost:3000/health || exit 1

# Start the app
CMD ["npm", "start"]
